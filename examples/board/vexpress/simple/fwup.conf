# Firmware configuration file

# This configuration file will create an image that
# has an MBR and the following layout:
#
# +----------------------------+
# | MBR                        |
# +----------------------------+
# | U-Boot (384K max)          |
# +----------------------------+
# | U-Boot environment (8K)    |
# +----------------------------+
# | p1: Rootfs (ext4)          |
# +----------------------------+
# | p2: Unused                 |
# +----------------------------+
# | p3: Unused                 |
# +----------------------------+
# | p4: Unused                 |
# +----------------------------+
#

define(UBOOT_OFFSET, 256)
define(UBOOT_COUNT, 768)
define(UBOOT_ENV_OFFSET, 1024)
define(UBOOT_ENV_COUNT, 8)
define(ROOTFS_PART_OFFSET, 2048)
define(ROOTFS_PART_COUNT, 524288)

file-resource u-boot {
    host-path = "${BINARIES_DIR}/u-boot"
}
file-resource uboot-env.bin {
    host-path = "${BINARIES_DIR}/uboot-env.bin"
}
file-resource rootfs.img {
    host-path = "${BINARIES_DIR}/rootfs.ext2"
}

mbr mbr_a {
    partition 0 {
        block-offset = ${ROOTFS_PART_OFFSET}
        block-count = ${ROOTFS_PART_COUNT}
        type = 0x83 # Linux
    }
    # partition 1 is unused
    # partition 2 is unused
    # partition 3 is unused
}

task complete {
    on-init {
        mbr_write(mbr_a)
    }

    on-resource u-boot {
        raw_write(${UBOOT_OFFSET})
    }
    on-resource uboot-env.bin {
        raw_write(${UBOOT_ENV_OFFSET})
    }
    on-resource rootfs.img {
        raw_write(${ROOTFS_PART_OFFSET})
    }
}
